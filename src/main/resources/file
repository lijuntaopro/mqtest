/*
		 * 校验各种规则后再保存
		 */
		BizAsserts.notNull(merchantContractDto, BizStatus.FAIL, "合同信息不能为空");
		
		PaymentChannelDto paymentChannel = payChannelService.getPaymentChannel(merchantContractDto.getPayChannelId())
				.getData();
		BizAsserts.notNull(paymentChannel, BizStatus.FAIL, "通道信息不能为空");
		
		BizDataResult<String> dataResult = payChannelService.getPlatformCodeById(paymentChannel.getPayPlatformId());
		String platformCode = dataResult.getData();
		if(StringUtils.isBlank(platformCode)){
			throw new BizException(BizStatus.FAIL.getCode(), "支付平台不能为空");
		}
		boolean isAllinpay = (PayChannelType.AllinPay.getCode()+"").equals(platformCode);

		if(isAllinpay){
			//通联支付设置商户封顶， 签约扣率为0.00 ，满足数据库非空约束
			merchantContractDto.setDeducationMaxAmount(new BigDecimal("0.00"));
			merchantContractDto.setContractDeductionRate(new BigDecimal("0.00"));
			contractFeeService.insertContractFeeWithHistory(merchantContractDto, userInfo.getName(), paymentChannel.getAgencyId());
		}
		MerchantDto merchant = merchantService.getMerchantInfo(merchantContractDto.getMerchantId()).getData();
		
		
		validFormData(merchantContractDto);


		BizAsserts.notNull(merchant, BizStatus.FAIL, "商户不存在");

		

		validSaveBizRule(merchantContractDto, merchant, paymentChannel, isAllinpay);
		/*
		 * 先保存业务表，再保存历史表
		 */
		MerchantContractDto merchantContract = initAndSaveContract(userInfo, paymentChannel, merchantContractDto, isAllinpay);
		
		if(isAllinpay){
			//通联支付不用保存合同历史记录
			merchantContractHistoryService.save(merchantContract, merchantContract.getCreateTime());
		}

		updateAttachment(merchantContractDto.getAttachments(), merchantContractDto.getSupplyAttachments(),
				merchantContract.getId());

		return BizDataResult.createResult(merchantContract.getId(), BizStatus.SUCC);