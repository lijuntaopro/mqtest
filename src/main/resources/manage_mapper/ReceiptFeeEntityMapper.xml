<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.paywe.fos.repository.manage.dao.ReceiptFeeEntityMapper" >
  <resultMap id="BaseResultMap" type="cn.paywe.fos.repository.manage.entity.ReceiptFeeEntity" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="payment_channel_id" property="paymentChannelId" jdbcType="VARCHAR" />
    <result column="channel_fee_id" property="channelFeeId" jdbcType="VARCHAR" />
    <result column="agency_id" property="agencyId" jdbcType="VARCHAR" />
    <result column="collection_type" property="collectionType" jdbcType="INTEGER" />
    <result column="payment_start_point" property="paymentStartPoint" jdbcType="DECIMAL" />
    <result column="payment_end_point" property="paymentEndPoint" jdbcType="DECIMAL" />
    <result column="pay_fee" property="payFee" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    id, payment_channel_id, channel_fee_id, agency_id, collection_type, payment_start_point, 
    payment_end_point, pay_fee, create_time, create_user, update_user, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.paywe.fos.repository.manage.entity.ReceiptFeeEntityExample" >
    <!--
      WARNING - @mbggenerated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from receipt_fee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.paywe.fos.repository.manage.entity.ReceiptFeeEntityExample" >
    <!--
      WARNING - @mbggenerated
    -->
    delete from receipt_fee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="cn.paywe.fos.repository.manage.entity.ReceiptFeeEntityExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
    -->
    select count(*) from receipt_fee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update receipt_fee
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentChannelId != null" >
        payment_channel_id = #{record.paymentChannelId,jdbcType=VARCHAR},
      </if>
      <if test="record.channelFeeId != null" >
        channel_fee_id = #{record.channelFeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.agencyId != null" >
        agency_id = #{record.agencyId,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionType != null" >
        collection_type = #{record.collectionType,jdbcType=INTEGER},
      </if>
      <if test="record.paymentStartPoint != null" >
        payment_start_point = #{record.paymentStartPoint,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentEndPoint != null" >
        payment_end_point = #{record.paymentEndPoint,jdbcType=DECIMAL},
      </if>
      <if test="record.payFee != null" >
        pay_fee = #{record.payFee,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update receipt_fee
    set id = #{record.id,jdbcType=VARCHAR},
      payment_channel_id = #{record.paymentChannelId,jdbcType=VARCHAR},
      channel_fee_id = #{record.channelFeeId,jdbcType=VARCHAR},
      agency_id = #{record.agencyId,jdbcType=VARCHAR},
      collection_type = #{record.collectionType,jdbcType=INTEGER},
      payment_start_point = #{record.paymentStartPoint,jdbcType=DECIMAL},
      payment_end_point = #{record.paymentEndPoint,jdbcType=DECIMAL},
      pay_fee = #{record.payFee,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>